version: "3"
services:
    #PHP Service
    api-banking-app:
        container_name: api-banking-app
        build:
            context: .
            dockerfile: .docker/production/Dockerfile
        restart: unless-stopped
        working_dir: /app
        volumes:
            - ./:/app
        networks:
            - src_default
        depends_on:
            - api-banking-db
            - api-banking-redis

    #Nginx Service
    api-banking-webserver:
        container_name: api-banking-webserver
        image: nginx:alpine
        restart: unless-stopped
        ports:
            - "${APP_PORT}:80"
        volumes:
            - ./:/app
            - .docker/local/nginx/:/etc/nginx/conf.d/
        networks:
            - src_default
        depends_on:
            - api-banking-app
            - api-banking-db
            - api-banking-redis

    #MySQL Service
    api-banking-db:
        container_name: api-banking-db
        image: mysql:8.0.30
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USERNAME: ${DB_USERNAME}
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
        volumes:
            - mysql-data:/var/lib/mysql
        networks:
            - src_default
        ports:
            - "${DB_EXT_PORT}:3306"

    #Redis Service
    api-banking-redis:
        container_name: api-banking-redis
        image: redis:5-alpine
        command: redis-server --requirepass ${REDIS_PASSWORD}
        volumes:
            - redis-data:/data
        restart: unless-stopped
        networks:
            - src_default

    #Mailhog Service
    api-banking-mailhog:
        container_name: api-banking-mailhog
        image: mailhog/mailhog
        ports:
            - "1025:1025"
            - "8025:8025"
        networks:
            - src_default

#Docker Networks
networks:
    src_default:
        driver: bridge

#Docker Volumes
volumes:
    mysql-data:
        driver: local
    redis-data:
        driver: local
